receivers:
  loadgen:
  nop:

exporters:
  otlp:
    endpoint: "https://gizas-benchmarktest-cfd867.ingest.us-central1.gcp.qa.elastic.cloud:443"
    headers:
      # The value of the authorization header does not matter, but it should
      # follow the format the elasticcloudauth expects it to be: base64 encoded,
      # and there should be one : splitting ID from the encoded value.
      Authorization: "ApiKey aElDUnpKZ0J5S1FsRnp6UHZoX2o6N0F3WjVkVUN4VXhzMkFjeWQxNm94Zw=="
    sending_queue:
      enabled: false
    tls:
      insecure_skip_verify: true
    timeout: 60s
  otlphttp:
    endpoint: "https://gizas-benchmarktest-cfd867.ingest.us-central1.gcp.qa.elastic.cloud:443"
    headers:
      # The value of the authorization header does not matter, but it should
      # follow the format the elasticcloudauth expects it to be: base64 encoded,
      # and there should be one : splitting ID from the encoded value.
      Authorization: "ApiKey aElDUnpKZ0J5S1FsRnp6UHZoX2o6N0F3WjVkVUN4VXhzMkFjeWQxNm94Zw=="
    sending_queue:
      enabled: false
    tls:
      insecure_skip_verify: true
    timeout: 60s
  nop:

processors:
  transform/rewrite:  # Rewrite telemetry to increase cardinality
    trace_statements:
      - context: span
        statements:
          # The worst way to generate a random ID, but is the simplest in OTTL
          # Only randomize trace ID such that span relationships are still maintained
          - set(trace_id.string, Substring(MD5(UUID()), 0, 32))

service:
  pipelines:
    logs:
      receivers: [loadgen]
      processors: [transform/rewrite]
      exporters: [otlp] # this will be set dynamically to otlp or otlphttp depending on config
    metrics:
      receivers: [loadgen]
      processors: [transform/rewrite]
      exporters: [otlp] # this will be set dynamically to otlp or otlphttp depending on config
    traces:
      receivers: [loadgen]
      processors: [transform/rewrite]
      exporters: [otlp] # this will be set dynamically to otlp or otlphttp depending on config
  telemetry:
    logs:
      level: ERROR